type Result_1 = 
 variant {
   err: text;
   ok: Member;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type Member = 
 record {
   age: nat;
   name: text;
 };
type DAO = 
 service {
   addMember: (Member) -> (Result);
   getAllEntries: () -> (vec record {
                               principal;
                               Member;
                             }) query;
   getAllMembers: () -> (vec Member) query;
   getAllPrincipals: () -> (vec principal) query;
   getMember: (principal) -> (Result_1) query;
   numberOfMembers: () -> (nat) query;
   removeMember: () -> (Result);
   updateMember: (Member) -> (Result);
 };
service : () -> DAO
